{"ast":null,"code":"var _jsxFileName = \"/home/divum/Desktop/Meetingroom/divummeeto/src/Compontents/Calender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Calender.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calender() {\n  _s();\n  const currentDate = new Date();\n  const [currentMonth, setCurrentMonth] = useState(currentDate.getMonth());\n  const currentYear = currentDate.getFullYear();\n  const Month = ['JAN', 'February', 'MAR', 'APR', 'MAY', 'JUNE', 'JULY', 'AUGUEST', 'SEPTEMBER', 'OCTEMBER', 'NOVEMBER', 'DECEMBER'];\n\n  // Create a function to generate a calendar for a specific month and year\n  function generateCalendar(month, year) {\n    const firstDayOfMonth = new Date(year, month, 1);\n    const lastDayOfMonth = new Date(year, month + 1, 0);\n    const daysInMonth = lastDayOfMonth.getDate();\n    const calendar = [];\n\n    // Fill in the days of the week for the header\n    const daysOfWeek = ['SUN', 'MON', 'TUE', 'WED', 'THE', 'FRI', 'SAT'];\n    calendar.push(daysOfWeek);\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(year, month, day);\n      const dayOfWeek = date.getDay();\n      const weekIndex = Math.floor((day + firstDayOfMonth.getDay() - 1) / 7);\n      if (!calendar[weekIndex + 1]) {\n        calendar[weekIndex + 1] = [];\n      }\n      calendar[weekIndex + 1][dayOfWeek] = day;\n    }\n    return calendar;\n  }\n  const calendar = generateCalendar(currentMonth, currentYear);\n  console.log(calendar);\n  //padding the zero in callender\n\n  function addToBeginning(arr, targetLength, valueToAdd) {\n    const newArray = Array.from({\n      length: arr[1].length\n    }, (_, index) => arr[1][index] !== undefined ? arr[1][index] : 0);\n    arr[1] = newArray;\n  }\n  const maxLength = Math.max(...calendar.map(subarray => 7));\n  addToBeginning(calendar, maxLength, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"callayout\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"month_design\",\n      children: [Month[currentMonth], \" \", currentDate.getFullYear(), \"     \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCurrentMonth(currentMonth - 1);\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 95\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCurrentMonth(currentMonth + 1);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 166\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: calendar.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map((date, ind) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: date === 0 ? \" \" : date\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 48\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Calender, \"TFWai26vvLblvQKJKL6GiE0SjxI=\");\n_c = Calender;\nexport default Calender;\nvar _c;\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calender","_s","currentDate","Date","currentMonth","setCurrentMonth","getMonth","currentYear","getFullYear","Month","generateCalendar","month","year","firstDayOfMonth","lastDayOfMonth","daysInMonth","getDate","calendar","daysOfWeek","push","day","date","dayOfWeek","getDay","weekIndex","Math","floor","console","log","addToBeginning","arr","targetLength","valueToAdd","newArray","Array","from","length","_","index","undefined","maxLength","max","map","subarray","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","item","ind","_c","$RefreshReg$"],"sources":["/home/divum/Desktop/Meetingroom/divummeeto/src/Compontents/Calender.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport \"./Calender.scss\";\n\n\nfunction Calender() {\n   \nconst currentDate = new Date();\n\nconst[currentMonth,setCurrentMonth]=useState(currentDate.getMonth());\n\n\nconst currentYear = currentDate.getFullYear();\nconst Month=['JAN','February','MAR','APR','MAY','JUNE','JULY','AUGUEST','SEPTEMBER','OCTEMBER','NOVEMBER','DECEMBER'];\n\n\n// Create a function to generate a calendar for a specific month and year\nfunction generateCalendar(month, year) {\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDayOfMonth = new Date(year, month + 1, 0);\n  const daysInMonth = lastDayOfMonth.getDate();\n\n  const calendar = [];\n\n  // Fill in the days of the week for the header\n  const daysOfWeek = ['SUN', 'MON', 'TUE', 'WED', 'THE', 'FRI', 'SAT'];\n  calendar.push(daysOfWeek);\n\n  \n  for (let day = 1; day <= daysInMonth; day++) {\n    const date = new Date(year, month, day);\n    const dayOfWeek = date.getDay();\n    const weekIndex = Math.floor((day + firstDayOfMonth.getDay() - 1) / 7);\n\n    if (!calendar[weekIndex + 1]) {\n      calendar[weekIndex + 1] = [];\n    }\n\n    calendar[weekIndex + 1][dayOfWeek] = day;\n  }\n\n  return calendar;\n}\n\n\nconst calendar = generateCalendar(currentMonth, currentYear);\nconsole.log(calendar);\n//padding the zero in callender\n\nfunction addToBeginning(arr, targetLength, valueToAdd) {\n    const newArray = Array.from({ length: arr[1].length }, (_, index) => arr[1][index] !== undefined ? arr[1][index] : 0);\narr[1]=newArray;\n  }\n\nconst maxLength = Math.max(...calendar.map(subarray =>7));\n\naddToBeginning(calendar, maxLength, 0);\n\n\n\n  return (\n\n    <div className='callayout'>\n        <span className='month_design'>{Month[currentMonth]} { currentDate.getFullYear()}     <button onClick={()=>{setCurrentMonth(currentMonth-1)}}>Back</button>  <button onClick={()=>{setCurrentMonth(currentMonth+1)}}>Next</button></span>\n        <table><tbody>{calendar.map((item,index)=>(\n        <tr key={index}>{item.map((date,ind)=>(<td key={ind}>{date===0?\" \": date}</td>))}</tr>\n    ))}</tbody></table></div>\n  )\n}\n\nexport default Calender"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}